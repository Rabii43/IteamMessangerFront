/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/// <amd-module name="tsickle/src/await_transformer" />
import * as ts from 'typescript';
/** Returns the nearest ancestor node that's a function or method declaration. */
export declare function getContainingFunctionLikeDeclaration(node: ts.Node): ts.FunctionDeclaration | ts.MethodDeclaration | undefined;
/**
 * awaitTransformer returns a transformer factory that handles await statements after they
 * have been transformed. TypeScript down-levels await statements to code like:
 *     tslib_1.__awaiter(this, void 0, void 0, function* () { ... }
 *
 * The generator function ("function* ...") needs the appropriate `\@this` annotation for Closure,
 * which this transformer inserts.
 *
 * This transformer is only needed (and only run by tsickle) when down-leveling await statements.
 *
 * @param thisTypeByAsyncFunction A map containing the context `this` type for all async function
 *     declarations. This is produced by jsdoc_transformer, as during that stage tsickle can insert
 *     imports and generally deals with types, whereas this code just post-processes TypeScript's
 *     emit.
 */
export declare function awaitTransformer(thisTypeByAsyncFunction: Map<ts.FunctionLikeDeclaration, string>): (context: ts.TransformationContext) => ts.Transformer<ts.SourceFile>;
